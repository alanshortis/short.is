---
import { render, getCollection, type CollectionEntry } from 'astro:content';
import Base from '../../layouts/base.astro';
import { AgeWarning, PostDate } from '../../components';

interface Props {
  post: CollectionEntry<'posts'>;
}

export const getStaticPaths = async () => {
  const blogPosts = await getCollection('posts');
  return blogPosts.map(post => ({
    params: { slug: post.slug },
    props: { post },
  }));
};
const { post } = Astro.props;
const { Content } = await render(post);
---

<Base pageTitle={`Alan Shortis | ${post.data.title}`} description={post.data.description}>
  <article class="post">
    <h1 class="post__title">{post.data.title}</h1>
    <div class="post__meta">
      <PostDate date={post.data.pubDate} />
    </div>
    <div class="post__content formatting">
      <AgeWarning pubDate={post.data.pubDate} showAgeWarning={Boolean(post.data.showAgeWarning)} />
      <Content />
    </div>
  </article>
</Base>

<style lang="scss">
  @use '../../styles/mixins' as *;

  .post {
    display: grid;
    gap: var(--step-5) var(--step-1);
    grid-template-columns: repeat(12, minmax(0, 1fr));
    &__title {
      font-style: italic;
      font-size: var(--step-5);
      font-weight: bold;
      grid-column: 1 / -1;
      text-wrap: balance;
    }
    &__meta {
      grid-column: 1 / -1;
      @include medium {
        grid-column: 1 / 6;
      }
    }
    &__content {
      grid-column: 1 / -1;
      @include medium {
        grid-column: 6 / -1;
      }
    }
  }
</style>

<style is:inline>
  .formatting {
    line-height: 1.618;
    text-wrap: pretty;
  }
  .formatting * + :where(p, ol, ul, h2, blockquote) {
    margin-top: 1lh;
  }

  .formatting a {
    text-decoration: underline;
  }

  .formatting em {
    font-style: italic;
  }

  .formatting h2 {
    font-size: var(--step-2);
  }

  .formatting kbd {
    font: inherit;
  }

  .formatting code {
    background-color: var(--code-background);
    border: 1px solid var(--divider);
    border-radius: var(--radius);
    font-family: monospace;
    font-size: var(--step--1);
    inset-block-end: 1px;
    margin-inline: 0.125em;
    padding-block: 0.125em;
    padding-inline: 0.25em;
    position: relative;
  }

  .formatting ul,
  .formatting ol {
    padding-inline-start: var(--space);
  }

  .formatting li {
    list-style: decimal;
    margin-bottom: 0.25lh;
  }

  .formatting ul li {
    list-style: disc;
  }

  .formatting blockquote {
    border-inline-start: 1px solid currentColor;
    display: block;
    font-style: italic;
    padding-inline-start: var(--space);
  }

  .formatting del {
    text-decoration: double line-through;
    opacity: 0.618;
  }

  .formatting ins {
    text-decoration: none;
  }
</style>
