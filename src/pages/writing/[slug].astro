---
import { render, getCollection, type CollectionEntry } from 'astro:content';
import Base from '../../layouts/base.astro';
import { Disclaimer, PostDate, ContentIcon } from '../../components';

interface Props {
  post: CollectionEntry<'posts'>;
}

export const getStaticPaths = async () => {
  const blogPosts = await getCollection('posts');
  return blogPosts
    .filter(post => post.data.published ?? true)
    .map(post => ({
      params: { slug: post.slug },
      props: { post },
    }));
};
const { post } = Astro.props;
const { Content } = await render(post);

const postAgeYears = Math.ceil(
  (new Date(post.data.pubDate).getTime() - new Date().getTime()) / (365 * 24 * 60 * 60 * 1000)
);

const shouldShowWarning = postAgeYears <= -2;
---

<Base pageTitle={`Alan Shortis | ${post.data.title}`} description={post.data.description}>
  <article class="post">
    <h1 class="post__title">{post.data.title}</h1>
    <div class="post__meta">
      <PostDate date={post.data.pubDate} />
      <ContentIcon icon={post.data.icon} />
    </div>
    <div class="post__content formatting">
      {
        shouldShowWarning && (
          <Disclaimer>This post is more than {Math.abs(postAgeYears)} years old</Disclaimer>
        )
      }
      <Content />
    </div>
  </article>
</Base>

<style lang="scss">
  @use '../../styles/mixins' as *;

  .post {
    display: grid;
    gap: var(--step-5) var(--step-1);
    grid-template-columns: repeat(12, minmax(0, 1fr));
    &__title {
      font-size: var(--step-5);
      font-weight: bold;
      grid-column: 1 / -1;
      letter-spacing: -1px;
      text-wrap: balance;
    }
    &__meta {
      display: flex;
      flex-direction: column;
      gap: var(--space--large);
      grid-column: 1 / 6;
      @include medium {
        grid-column: 1 / -1;
      }
    }
    &__content {
      grid-column: 6 / -1;
      @include medium {
        grid-column: 1 / -1;
      }
    }
  }
</style>
