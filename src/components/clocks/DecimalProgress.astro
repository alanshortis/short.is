<div class="progress">
  <decimal-progress>
    <div
      class="progress__outer"
      role="progressbar"
      aria-valuemin="0.0%"
      aria-valuemax="99.9%"
      aria-valuenow=""
    >
      <div class="progress__inner"></div>
    </div>
    <span class="progress__label"></span>
  </decimal-progress>
</div>

<script>
  import type { DecimalTime } from '../../shared-types';

  class DecimalProgress extends HTMLElement {
    private worker: Worker;
    private progressOuter: HTMLDivElement;
    private progressInner: HTMLDivElement;
    private progressLabel: HTMLSpanElement;

    constructor() {
      super();
      this.worker = new Worker(new URL('/src/workers/decimal-clock.ts', import.meta.url));
      this.progressOuter = this.querySelector('.progress__outer')!;
      this.progressInner = this.progressOuter.querySelector('.progress__inner')!;
      this.progressLabel = this.querySelector('.progress__label')!;

      this.worker.onmessage = (event: MessageEvent<DecimalTime>) => {
        const elapsedPercentage = (event.data.hours * 10 + event.data.minutes / 10).toFixed(1);

        this.progressOuter.ariaValueNow = elapsedPercentage;
        this.style.setProperty('--progress-width', `${elapsedPercentage}%`);
        this.style.setProperty('--progress-label-left', `${elapsedPercentage}%`);
        this.progressLabel.innerHTML = `${elapsedPercentage}%`;
      };
    }

    disconnectedCallback() {
      this.worker.terminate();
    }
  }

  customElements.define('decimal-progress', DecimalProgress);
</script>

<style lang="scss">
  @use '../../styles/mixins' as *;

  .progress {
    margin-block: var(--space--large);
    margin-inline: auto;
    width: 70%;
    &__outer {
      background:
        linear-gradient(90deg, var(--background) calc(4px - 1px), transparent 1%) center / 4px 4px,
        linear-gradient(var(--background) calc(4px - 1px), transparent 1%) center / 4px 4px,
        var(--foreground);
      height: 22px;
      background-position: center right;
    }
    &__inner {
      background-color: var(--foreground);
      height: 100%;
      width: var(--progress-width, 0%);
    }
    &__label {
      left: var(--progress-label-left, 0%);
      margin-inline-start: -2.5ch;
      position: relative;
      top: 0.5ch;
      @include label;
      &::before {
        content: '';
        position: absolute;
        height: 60%;
        width: 1px;
        left: calc(2.5ch - 1px);
        top: -1.5ch;
        background-color: currentColor;
      }
    }
  }
</style>
